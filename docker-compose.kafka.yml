# FILE: docker-compose.kafka.yml
version: "3.8"
services:
  redpanda:
    image: docker.redpanda.com/redpanda/redpanda:v24.2.7
    command: >
      redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M
      --node-id 0 --check=false --set redpanda.enable_idempotence=true
    ports: ["9092:9092","9644:9644"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tcd
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres -d tcd"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./vault/sql:/docker-entrypoint-initdb.d:ro

  otel-collector:
    image: otel/opentelemetry-collector:0.104.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports: ["4318:4318"]

  gateway:
    build: ./gateway
    environment:
      SIDE_URL: "http://sidecar:8081"
      PROVIDER_URL: "http://provider:8082"
      VAULT_URL: "http://vault:8083"
      GATEWAY_PORT: "8080"
      GATEWAY_SHARED_SECRET: "devshared"
      AUTH_JWT_SECRET: "devjwt"
      LOG_LEVEL: "INFO"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318/v1/traces"
      ASYNC_MODE: "1"
      KAFKA_BOOTSTRAP: "redpanda:9092"
      OUTBOX_PATH: "/data/outbox.db"
    volumes:
      - gateway_data:/data
    ports: ["8080:8080"]
    depends_on:
      redpanda: { condition: service_started }
      sidecar: { condition: service_healthy }
      provider: { condition: service_healthy }
      vault:    { condition: service_healthy }

  sidecar:
    build: ./sidecar
    environment:
      SIDECAR_PORT: "8081"
      LOG_LEVEL: "INFO"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318/v1/traces"
    ports: ["8081:8081"]

  provider:
    build: ./provider
    environment:
      PROVIDER_PORT: "8082"
      LOG_LEVEL: "INFO"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318/v1/traces"
    ports: ["8082:8082"]

  vault:
    build: ./vault
    environment:
      VAULT_PORT: "8083"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/tcd"
      VAULT_SHARED_SECRET: "devshared"
      DEMO_ALLOW_UNSIGNED: "1"
      LOG_LEVEL: "INFO"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318/v1/traces"
    ports: ["8083:8083"]
    depends_on:
      postgres: { condition: service_healthy }

  vault-consumer:
    build: ./vault
    command: ["python","consumer.py"]
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/tcd"
      KAFKA_BOOTSTRAP: "redpanda:9092"
      GROUP_ID: "vault-consumers"
      TOPIC: "tcd.receipts"
    depends_on:
      redpanda: { condition: service_started }
      postgres: { condition: service_healthy }

volumes:
  pg_data: {}
  gateway_data: {}